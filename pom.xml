<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>sonar-delphi-plugin</artifactId>
  <version>1.8</version>
  <groupId>org.delphi.plugin</groupId>
  <name>Sonar Delphi Plugin</name>
  <description>Code analyzer for Delphi</description>
  <inceptionYear>2011</inceptionYear>
  <url>https://www.integradev.com.au/</url>
  <organization>
    <name>IntegraDev</name>
    <url>https://www.integradev.com.au/</url>
  </organization>
  <licenses>
    <license>
      <name>GNU LGPL 3</name>
      <url>http://www.gnu.org/licenses/lgpl.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <developers>
    <developer>
      <id>sandroluck</id>
      <email>sandro.luck@gmx.ch</email>
      <name>Sandro Luck</name>
      <roles>
        <role>developer</role>
      </roles>
    </developer>
    <developer>
      <id>fabriciocolombo</id>
      <email>fabricio.colombo.mva@gmail.com</email>
      <name>Fabricio Colombo</name>
      <roles>
        <role>developer</role>
      </roles>
    </developer>
    <developer>
      <id>pk</id>
      <email>przemyslaw.kociolek@sabre.com</email>
      <name>Przemyslaw Kociolek</name>
      <roles>
        <role>developer</role>
      </roles>
    </developer>
    <developer>
      <id>mgw</id>
      <name>Michal Wojcik</name>
      <email>michal.wojcik@sabre.com</email>
      <organization>Sabre Airline Solutions</organization>
      <organizationUrl>http://www.sabreairlinesolutions.com</organizationUrl>
      <roles>
        <role>architect</role>
        <role>developer</role>
      </roles>
      <timezone>+1</timezone>
    </developer>
    <developer>
      <id>agt</id>
      <name>The Agile Excuse Team - Monash University</name>
      <roles>
        <role>developer</role>
      </roles>
    </developer>
    <developer>
      <id>jej</id>
      <name>Jonah Jeleniewski</name>
      <email>jjeleniewski@integradev.com.au</email>
      <organization>IntegraDev</organization>
      <organizationUrl>https://www.integradev.com.au/</organizationUrl>
      <roles>
        <role>developer</role>
      </roles>
    </developer>
  </developers>
  <distributionManagement>
    <site>
      <id>doc</id>
      <url>file://${java.io.tmpdir}/sonar-delphi-plugin-docs</url>
    </site>
  </distributionManagement>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <sonar.pluginName>Delphi</sonar.pluginName>
    <sonar.pluginName>Delphi</sonar.pluginName>
    <sonar.pluginClass>org.sonar.plugins.delphi.DelphiPlugin</sonar.pluginClass>
    <!--Jacoco properties-->
    <jacoco.dataFile>${basedir}/target/jacoco/jacoco.exec</jacoco.dataFile>
    <jacoco.outputDirectory>${basedir}/target/jacoco/report/</jacoco.outputDirectory>
    <jacoco.dataFile.it>${basedir}/target/jacoco/jacoco-it.exec</jacoco.dataFile.it>
    <jacoco.outputDirectory.it>${basedir}/target/jacoco/report-it/</jacoco.outputDirectory.it>
    <!--Version Fields-->
    <sonarQubeMinVersion>7.9</sonarQubeMinVersion>
    <sonar.version>7.9</sonar.version>
    <sonarqube-smell-api.version>4.0.0</sonarqube-smell-api.version>
    <sonar-orchestrator.version>3.27.0.2172</sonar-orchestrator.version>
    <antlr-runtime.version>3.4</antlr-runtime.version>
    <pmd.version>6.18.0</pmd.version>
    <junit.version>4.12</junit.version>
    <assertj.version>3.14.0</assertj.version>
    <mockito.version>3.0.0</mockito.version>
    <archunit.version>0.13.0</archunit.version>
    <java-surefire.version>5.13.0.18197</java-surefire.version>
    <guava.version>28.1-jre</guava.version>
    <jdom.version>1.0</jdom.version>
    <errorprone.version>2.3.4</errorprone.version>
    <!--Maven plugins-->
    <antlr3-plugin.version>3.5.2</antlr3-plugin.version>
    <jacoco-plugin.version>0.8.5</jacoco-plugin.version>
    <surefire-plugin.version>2.22.0</surefire-plugin.version>
    <sonar-packaging-plugin.version>1.16</sonar-packaging-plugin.version>
    <license-plugin.version>1.9.0</license-plugin.version>
    <javadoc-plugin>3.1.0</javadoc-plugin>
    <dependency-plugin.version>2.10</dependency-plugin.version>
    <dependency-check-plugin.version>5.2.1</dependency-check-plugin.version>
    <compiler-plugin.version>3.5.1</compiler-plugin.version>
    <build-helper-plugin.version>3.0.0</build-helper-plugin.version>
    <fmt-maven-plugin.version>2.9</fmt-maven-plugin.version>
  </properties>
  <!-- this is important for sonar-packaging-maven-plugin -->
  <packaging>sonar-plugin</packaging>
  <dependencies>
    <!-- Sonar-specific deps -->
    <dependency>
      <groupId>org.sonarsource.sonarqube</groupId>
      <artifactId>sonar-plugin-api</artifactId>
      <version>${sonar.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.sonarsource.sonarqube</groupId>
      <artifactId>sonar-ws</artifactId>
      <version>${sonar.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.sonarsource.java</groupId>
      <artifactId>java-surefire</artifactId>
      <version>${java-surefire.version}</version>
    </dependency>
    <dependency>
      <groupId>com.qualinsight.plugins.sonarqube</groupId>
      <artifactId>qualinsight-plugins-sonarqube-smell-api</artifactId>
      <version>${sonarqube-smell-api.version}</version>
    </dependency>
    <dependency>
      <groupId>org.sonarsource.orchestrator</groupId>
      <artifactId>sonar-orchestrator</artifactId>
      <version>${sonar-orchestrator.version}</version>
      <scope>test</scope>
    </dependency>
    <!-- Plugin-specific deps -->
    <dependency>
      <groupId>org.antlr</groupId>
      <artifactId>antlr-runtime</artifactId>
      <version>${antlr-runtime.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>net.sourceforge.pmd</groupId>
      <artifactId>pmd-core</artifactId>
      <version>${pmd.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${guava.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>jdom</groupId>
      <artifactId>jdom</artifactId>
      <version>${jdom.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.jetbrains</groupId>
      <artifactId>annotations</artifactId>
      <version>17.0.0</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj.version}</version>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.tngtech.archunit</groupId>
      <artifactId>archunit-junit4</artifactId>
      <version>${archunit.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.sonarsource.sonar-packaging-maven-plugin</groupId>
        <artifactId>sonar-packaging-maven-plugin</artifactId>
        <version>${sonar-packaging-plugin.version}</version>
        <extensions>true</extensions>
      </plugin>
      <plugin>
        <groupId>com.mycila.maven-license-plugin</groupId>
        <artifactId>maven-license-plugin</artifactId>
        <version>${license-plugin.version}</version>
        <configuration>
          <validHeaders>
            <value>/src/SABRE_AIRLINE_LICENSE.txt</value>
            <value>/src/LUCK_LICENSE.txt</value>
            <value>/src/COLOMBO_LICENSE.txt</value>
            <value>/src/COLOMBO_LICENSE.txt</value>
          </validHeaders>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.antlr</groupId>
        <artifactId>antlr3-maven-plugin</artifactId>
        <version>${antlr3-plugin.version}</version>
        <configuration>
          <printGrammar>false</printGrammar>
          <verbose>true</verbose>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>antlr</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${javadoc-plugin}</version>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <source>11</source>
          <javadocExecutable>${env.JAVA_HOME}/bin/javadoc.exe</javadocExecutable>
          <quiet>true</quiet>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>${dependency-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${compiler-plugin.version}</version>
        <configuration>
          <source>11</source>
          <target>11</target>
          <showWarnings>true</showWarnings>
          <showDeprecation>true</showDeprecation>
          <compilerArgs>
            <arg>-XDcompilePolicy=simple</arg>
            <arg>-Xlint:all,-serial,-path,-processing,-rawtypes,-cast,-classfile</arg>
            <arg>-Xplugin:ErrorProne -XepDisableWarningsInGeneratedCode -XepExcludedPaths:.*/Delphi(Lexer|Parser).java</arg>
          </compilerArgs>
          <annotationProcessorPaths>
            <path>
              <groupId>com.google.errorprone</groupId>
              <artifactId>error_prone_core</artifactId>
              <version>${errorprone.version}</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco-plugin.version}</version>
        <executions>
          <execution>
            <id>pre-unit-test</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <destFile>${jacoco.dataFile}</destFile>
            </configuration>
          </execution>
          <execution>
            <id>post-unit-test</id>
            <phase>verify</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>${jacoco.dataFile}</dataFile>
              <outputDirectory>${jacoco.outputDirectory}</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>pre-integration-test</id>
            <goals>
              <goal>prepare-agent-integration</goal>
            </goals>
            <configuration>
              <destFile>${jacoco.dataFile.it}</destFile>
            </configuration>
          </execution>
          <execution>
            <id>post-integration-test</id>
            <phase>verify</phase>
            <goals>
              <goal>report-integration</goal>
            </goals>
            <configuration>
              <dataFile>${jacoco.dataFile.it}</dataFile>
              <outputDirectory>${jacoco.outputDirectory.it}</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire-plugin.version}</version>
        <configuration>
          <redirectTestOutputToFile>true</redirectTestOutputToFile>
          <excludes>
            <exclude>**/IntegrationTests.java</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>3.0.0-M3</version>
        <configuration>
          <redirectTestOutputToFile>true</redirectTestOutputToFile>
          <includes>
            <include>**/IntegrationTests.java</include>
          </includes>
          <failIfNoTests>true</failIfNoTests>
          <argLine>@{argLine} -Dhttps.proxyHost=${env.HTTP_PROXY_SERVER} -Dhttps.proxyPort=${env.HTTP_PROXY_PORT}</argLine>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.owasp</groupId>
        <artifactId>dependency-check-maven</artifactId>
        <version>${dependency-check-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <formats>
                <format>HTML</format>
                <format>XML</format>
              </formats>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>${build-helper-plugin.version}</version>
        <executions>
          <execution>
            <id>add-antlr3-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>target/generated-sources/</source>
              </sources>
            </configuration>
          </execution>
          <execution>
            <id>add-integration-test-source</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/it/java</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.coveo</groupId>
        <artifactId>fmt-maven-plugin</artifactId>
        <version>${fmt-maven-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>format</goal>
            </goals>
            <configuration>
              <additionalSourceDirectories>
                <param>${project.basedir}/src/it/java</param>
              </additionalSourceDirectories>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>