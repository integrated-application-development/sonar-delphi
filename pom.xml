<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>sonar-delphi-plugin</artifactId>
  <version>4.4</version>
  <groupId>org.delphi.plugin</groupId>
  <name>Sonar Delphi Plugin</name>
  <description>Code analyzer for Delphi</description>
  <inceptionYear>2011</inceptionYear>
  <organization>
    <name>IntegraDev</name>
    <url>https://www.integradev.com.au/</url>
  </organization>
  <licenses>
    <license>
      <name>GNU LGPL 3</name>
      <url>http://www.gnu.org/licenses/lgpl.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <developers>
    <developer>
      <id>jej</id>
      <name>Jonah Jeleniewski</name>
      <email>jjeleniewski@integradev.com.au</email>
      <organization>IntegraDev</organization>
      <organizationUrl>https://www.integradev.com.au/</organizationUrl>
      <roles>
        <role>architect</role>
        <role>developer</role>
      </roles>
    </developer>
    <developer>
      <id>agt</id>
      <name>The Agile Excuse Team - Monash University</name>
      <roles>
        <role>developer</role>
      </roles>
    </developer>
    <developer>
      <id>sandroluck</id>
      <email>sandro.luck@gmx.ch</email>
      <name>Sandro Luck</name>
      <roles>
        <role>developer</role>
      </roles>
    </developer>
    <developer>
      <id>fabriciocolombo</id>
      <email>fabricio.colombo.mva@gmail.com</email>
      <name>Fabricio Colombo</name>
      <roles>
        <role>developer</role>
      </roles>
    </developer>
    <developer>
      <id>pk</id>
      <email>przemyslaw.kociolek@sabre.com</email>
      <name>Przemyslaw Kociolek</name>
      <roles>
        <role>developer</role>
      </roles>
    </developer>
    <developer>
      <id>mgw</id>
      <name>Michal Wojcik</name>
      <email>michal.wojcik@sabre.com</email>
      <organization>Sabre Airline Solutions</organization>
      <organizationUrl>http://www.sabreairlinesolutions.com</organizationUrl>
      <roles>
        <role>architect</role>
        <role>developer</role>
      </roles>
      <timezone>+1</timezone>
    </developer>
  </developers>
  <distributionManagement>
    <site>
      <id>doc</id>
      <url>file://${java.io.tmpdir}/sonar-delphi-plugin-docs</url>
    </site>
  </distributionManagement>
  <properties>
    <sonar.pluginName>Delphi</sonar.pluginName>
    <sonar.pluginClass>org.sonar.plugins.delphi.DelphiPlugin</sonar.pluginClass>
    <jacoco.dataFile.it>${basedir}/target/jacoco/jacoco-it.exec</jacoco.dataFile.it>
    <jacoco.outputDirectory.it>${basedir}/target/jacoco/report-it/</jacoco.outputDirectory.it>
    <lint.flags>-serial,-processing,-classfile</lint.flags>
    <errorprone.flags>-XepExcludedPaths:.*/generated-sources/.*</errorprone.flags>
    <dependency-track.projectName>tools::sonar-delphi-prod</dependency-track.projectName>
    <!-- Sonar wants equals() and hashcode() overrides on a bunch of DelphiRules.
         The existing methods in PMD's AbstractRule already handle all the important data. -->
    <sonar.issue.ignore.multicriteria>j1</sonar.issue.ignore.multicriteria>
    <sonar.issue.ignore.multicriteria.j1.ruleKey>java:S2160</sonar.issue.ignore.multicriteria.j1.ruleKey>
    <sonar.issue.ignore.multicriteria.j1.resourceKey>**/pmd/rules/*.java</sonar.issue.ignore.multicriteria.j1.resourceKey>
    <!--Dependency versions-->
    <sonarQubeMinVersion>7.9</sonarQubeMinVersion>
    <sonar.version>7.9</sonar.version>
    <sonar-analyzers-commons.version>1.15.0.699</sonar-analyzers-commons.version>
    <sonar-orchestrator.version>3.36.0.63</sonar-orchestrator.version>
    <antlr-runtime.version>3.5.2</antlr-runtime.version>
    <pmd.version>6.18.0</pmd.version>
    <jdom.version>1.1.3</jdom.version>
    <jetbrains-annotations.version>22.0.0</jetbrains-annotations.version>
    <junit-platform.version>1.8.0-M1</junit-platform.version>
    <!--Maven plugins-->
    <antlr3-plugin.version>3.5.2</antlr3-plugin.version>
    <jacoco-plugin.version>0.8.7</jacoco-plugin.version>
    <!-- NOTE: Using Surefire M4 because M5 fails to find tests when surefire-platform-runner is present -->
    <surefire-plugin.version>3.0.0-M4</surefire-plugin.version>
    <failsafe-plugin.version>3.0.0-M5</failsafe-plugin.version>
    <sonar-packaging-plugin.version>1.20.0.405</sonar-packaging-plugin.version>
    <build-helper-plugin.version>3.2.0</build-helper-plugin.version>
    <replacer-plugin.version>1.5.3</replacer-plugin.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <jacoco.coverageRequirement>0.9000</jacoco.coverageRequirement>
    <jacoco.dataFile>${basedir}/target/jacoco/jacoco.exec</jacoco.dataFile>
    <jacoco.outputDirectory>${basedir}/target/jacoco/report/</jacoco.outputDirectory>
    <enforcer.mavenVersion>3.8.4</enforcer.mavenVersion>
    <javadoc.sourcepath>${project.basedir}/src/main/java</javadoc.sourcepath>
    <sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
    <sonar.coverage.jacoco.xmlReportPaths>target/jacoco/report/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
    <sonar.dependencyCheck.reportPath>target/dependency-check-report.xml</sonar.dependencyCheck.reportPath>
    <sonar.dependencyCheck.htmlReportPath>target/dependency-check-report.html</sonar.dependencyCheck.htmlReportPath>
    <sonar.dependencyCheck.severity.blocker>9.0</sonar.dependencyCheck.severity.blocker>
    <sonar.dependencyCheck.severity.critical>7.0</sonar.dependencyCheck.severity.critical>
    <sonar.dependencyCheck.severity.major>4.0</sonar.dependencyCheck.severity.major>
    <sonar.dependencyCheck.severity.minor>0.0</sonar.dependencyCheck.severity.minor>
    <sonar.dependencyCheck.summarize>true</sonar.dependencyCheck.summarize>
    <sonar.issue.ignore.allfile>r1</sonar.issue.ignore.allfile>
    <sonar.issue.ignore.allfile.r1.fileRegexp>@(javax\\.annotation\\.)?Generated</sonar.issue.ignore.allfile.r1.fileRegexp>
    <sonarqube-smell-api.version>4.0.0</sonarqube-smell-api.version>
    <javax.annotation-api.version>1.3.2</javax.annotation-api.version>
    <guava.version>31.0.1-jre</guava.version>
    <commons-lang.version>3.12.0</commons-lang.version>
    <commons-io.version>2.11.0</commons-io.version>
    <junit.version>5.8.2</junit.version>
    <assertj.version>3.22.0</assertj.version>
    <mockito.version>4.3.1</mockito.version>
    <archunit.version>0.22.0</archunit.version>
    <compiler-plugin.version>3.9.0</compiler-plugin.version>
    <cyclonedx-plugin.version>2.5.3</cyclonedx-plugin.version>
    <dependency-plugin.version>3.2.0</dependency-plugin.version>
    <javadoc-plugin.version>3.3.1</javadoc-plugin.version>
    <site-plugin.version>3.10.0</site-plugin.version>
    <dependency-check-plugin.version>6.5.3</dependency-check-plugin.version>
    <jxr-plugin.version>3.1.1</jxr-plugin.version>
    <errorprone.version>2.11.0</errorprone.version>
    <project-info-reports-plugin.version>3.1.2</project-info-reports-plugin.version>
    <versions-plugin.version>2.9.0</versions-plugin.version>
    <lock-plugin.version>0.25</lock-plugin.version>
  </properties>
  <!-- this is important for sonar-packaging-maven-plugin -->
  <packaging>sonar-plugin</packaging>
  <dependencies>
    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>javax.annotation-api</artifactId>
      <version>${javax.annotation-api.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.errorprone</groupId>
      <artifactId>error_prone_annotations</artifactId>
      <version>${errorprone.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${guava.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>${commons-lang.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${commons-io.version}</version>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.sonarsource.sonarqube</groupId>
      <artifactId>sonar-plugin-api</artifactId>
      <version>${sonar.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.sonarsource.analyzer-commons</groupId>
      <artifactId>sonar-analyzer-commons</artifactId>
      <version>${sonar-analyzers-commons.version}</version>
    </dependency>
    <dependency>
      <groupId>com.qualinsight.plugins.sonarqube</groupId>
      <artifactId>qualinsight-plugins-sonarqube-smell-api</artifactId>
      <version>${sonarqube-smell-api.version}</version>
    </dependency>
    <dependency>
      <groupId>org.antlr</groupId>
      <artifactId>antlr-runtime</artifactId>
      <version>${antlr-runtime.version}</version>
    </dependency>
    <dependency>
      <groupId>net.sourceforge.pmd</groupId>
      <artifactId>pmd-core</artifactId>
      <version>${pmd.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jdom</groupId>
      <artifactId>jdom</artifactId>
      <version>${jdom.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jetbrains</groupId>
      <artifactId>annotations</artifactId>
      <version>${jetbrains-annotations.version}</version>
    </dependency>
    <dependency>
      <groupId>org.junit.vintage</groupId>
      <artifactId>junit-vintage-engine</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-runner</artifactId>
      <version>${junit-platform.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.tngtech.archunit</groupId>
      <artifactId>archunit-junit5</artifactId>
      <scope>test</scope>
      <version>${archunit.version}</version>
    </dependency>
    <dependency>
      <groupId>org.sonarsource.sonarqube</groupId>
      <artifactId>sonar-ws</artifactId>
      <version>${sonar.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.sonarsource.orchestrator</groupId>
      <artifactId>sonar-orchestrator</artifactId>
      <version>${sonar-orchestrator.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.owasp</groupId>
        <artifactId>dependency-check-maven</artifactId>
        <version>${dependency-check-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <formats>
                <format>HTML</format>
                <format>XML</format>
              </formats>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco-plugin.version}</version>
        <executions>
          <execution>
            <id>pre-integration-test</id>
            <goals>
              <goal>prepare-agent-integration</goal>
            </goals>
            <configuration>
              <destFile>${jacoco.dataFile.it}</destFile>
            </configuration>
          </execution>
          <execution>
            <id>post-integration-test</id>
            <phase>verify</phase>
            <goals>
              <goal>report-integration</goal>
            </goals>
            <configuration>
              <dataFile>${jacoco.dataFile.it}</dataFile>
              <outputDirectory>${jacoco.outputDirectory.it}</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>default-prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <destFile>${jacoco.dataFile}</destFile>
            </configuration>
          </execution>
          <execution>
            <id>default-report</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>${jacoco.dataFile}</dataFile>
              <outputDirectory>${jacoco.outputDirectory}</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>jacoco-check</id>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <haltOnFailure>true</haltOnFailure>
              <rules>
                <rule>
                  <element>BUNDLE</element>
                  <limits>
                    <limit>
                      <counter>INSTRUCTION</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>${jacoco.coverageRequirement}</minimum>
                    </limit>
                  </limits>
                </rule>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire-plugin.version}</version>
        <configuration>
          <redirectTestOutputToFile>true</redirectTestOutputToFile>
          <excludes>
            <exclude>**/IntegrationTestSuite.java</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${failsafe-plugin.version}</version>
        <configuration>
          <redirectTestOutputToFile>true</redirectTestOutputToFile>
          <includes>
            <include>**/IntegrationTestSuite.java</include>
          </includes>
          <failIfNoTests>true</failIfNoTests>
          <argLine>@{argLine} -Dhttps.proxyHost=${env.HTTP_PROXY_SERVER} -Dhttps.proxyPort=${env.HTTP_PROXY_PORT}</argLine>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.sonarsource.sonar-packaging-maven-plugin</groupId>
        <artifactId>sonar-packaging-maven-plugin</artifactId>
        <version>${sonar-packaging-plugin.version}</version>
        <extensions>true</extensions>
      </plugin>
      <plugin>
        <groupId>org.antlr</groupId>
        <artifactId>antlr3-maven-plugin</artifactId>
        <version>${antlr3-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>antlr</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>${build-helper-plugin.version}</version>
        <executions>
          <execution>
            <id>add-antlr3-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>target/generated-sources/</source>
              </sources>
            </configuration>
          </execution>
          <execution>
            <id>add-integration-test-source</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/it/java</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.google.code.maven-replacer-plugin</groupId>
        <artifactId>replacer</artifactId>
        <version>${replacer-plugin.version}</version>
        <executions>
          <execution>
            <phase>process-sources</phase>
            <goals>
              <goal>replace</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <includes>
            <include>${project.build.directory}/generated-sources/antlr3/org/sonar/plugins/delphi/antlr/DelphiLexer.java</include>
            <include>${project.build.directory}/generated-sources/antlr3/org/sonar/plugins/delphi/antlr/DelphiParser.java</include>
          </includes>
          <regexFlags>MULTILINE</regexFlags>
          <replacements>
            <replacement>
              <token>^@SuppressWarnings\("all"\)</token>
              <value>@SuppressWarnings({"cast","rawtypes","unchecked"}) @javax.annotation.processing.Generated("ANTLR")</value>
            </replacement>
          </replacements>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${compiler-plugin.version}</version>
        <configuration>
          <source>11</source>
          <target>11</target>
          <showWarnings>true</showWarnings>
          <showDeprecation>true</showDeprecation>
          <compilerArgs>
            <arg>-XDcompilePolicy=simple</arg>
            <arg>-Werror</arg>
            <arg>-Xlint:all,${lint.flags}</arg>
            <arg>-Xplugin:ErrorProne ${errorprone.flags}</arg>
          </compilerArgs>
          <annotationProcessorPaths>
            <path>
              <groupId>com.google.errorprone</groupId>
              <artifactId>error_prone_core</artifactId>
              <version>${errorprone.version}</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.cyclonedx</groupId>
        <artifactId>cyclonedx-maven-plugin</artifactId>
        <version>${cyclonedx-plugin.version}</version>
        <configuration>
          <schemaVersion>1.1</schemaVersion>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>${site-plugin.version}</version>
        <configuration>
          <siteDirectory>${rootDir}</siteDirectory>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>attach-descriptor</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <pomPackagingOnly>false</pomPackagingOnly>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>se.vandmo</groupId>
        <artifactId>dependency-lock-maven-plugin</artifactId>
        <version>${lock-plugin.version}</version>
        <executions>
          <execution>
            <id>check</id>
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>${versions-plugin.version}</version>
      </plugin>
    </plugins>
  </build>
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>${project-info-reports-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <reportSets>
          <reportSet>
            <reports>
              <report>aggregate-no-fork</report>
            </reports>
          </reportSet>
        </reportSets>
        <version>${javadoc-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>${versions-plugin.version}</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>dependency-updates-report</report>
              <report>plugin-updates-report</report>
              <report>property-updates-report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <reportSets>
          <reportSet>
            <reports>
              <report>analyze-report</report>
            </reports>
          </reportSet>
        </reportSets>
        <version>${dependency-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>${jxr-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>${surefire-plugin.version}</version>
        <configuration>
          <aggregate>true</aggregate>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco-plugin.version}</version>
      </plugin>
    </plugins>
  </reporting>
</project>